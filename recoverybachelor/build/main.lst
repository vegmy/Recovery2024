ARM GAS  C:\Users\vmyhr\AppData\Local\Temp\ccR0Lff3.s 			page 1


   1              		.cpu cortex-m4
   2              		.arch armv7e-m
   3              		.fpu fpv4-sp-d16
   4              		.eabi_attribute 27, 1
   5              		.eabi_attribute 28, 1
   6              		.eabi_attribute 20, 1
   7              		.eabi_attribute 21, 1
   8              		.eabi_attribute 23, 3
   9              		.eabi_attribute 24, 1
  10              		.eabi_attribute 25, 1
  11              		.eabi_attribute 26, 1
  12              		.eabi_attribute 30, 1
  13              		.eabi_attribute 34, 1
  14              		.eabi_attribute 18, 4
  15              		.file	"main.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.file 1 "Core/Src/main.c"
  20              		.section	.text.SPI_WAIT_NOT_BUSY,"ax",%progbits
  21              		.align	1
  22              		.global	SPI_WAIT_NOT_BUSY
  23              		.syntax unified
  24              		.thumb
  25              		.thumb_func
  27              	SPI_WAIT_NOT_BUSY:
  28              	.LFB137:
   1:Core/Src/main.c **** /* USER CODE BEGIN Header */
   2:Core/Src/main.c **** /**
   3:Core/Src/main.c ****   ******************************************************************************
   4:Core/Src/main.c ****   * @file           : main.c
   5:Core/Src/main.c ****   * @brief          : Main program body
   6:Core/Src/main.c ****   ******************************************************************************
   7:Core/Src/main.c ****   * @attention
   8:Core/Src/main.c ****   *
   9:Core/Src/main.c ****   * Copyright (c) 2024 STMicroelectronics.
  10:Core/Src/main.c ****   * All rights reserved.
  11:Core/Src/main.c ****   *
  12:Core/Src/main.c ****   * This software is licensed under terms that can be found in the LICENSE file
  13:Core/Src/main.c ****   * in the root directory of this software component.
  14:Core/Src/main.c ****   * If no LICENSE file comes with this software, it is provided AS-IS.
  15:Core/Src/main.c ****   *
  16:Core/Src/main.c ****   ******************************************************************************
  17:Core/Src/main.c ****   */
  18:Core/Src/main.c **** /* USER CODE END Header */
  19:Core/Src/main.c **** /* Includes ------------------------------------------------------------------*/
  20:Core/Src/main.c **** #include "main.h"
  21:Core/Src/main.c **** #include "i2c.h"
  22:Core/Src/main.c **** #include "spi.h"
  23:Core/Src/main.c **** #include "gpio.h"
  24:Core/Src/main.c **** 
  25:Core/Src/main.c **** /* Private includes ----------------------------------------------------------*/
  26:Core/Src/main.c **** /* USER CODE BEGIN Includes */
  27:Core/Src/main.c **** #include "ms5803.h"
  28:Core/Src/main.c **** #include "stdlib.h"
  29:Core/Src/main.c **** #include "stdio.h"
  30:Core/Src/main.c **** #include "string.h"
ARM GAS  C:\Users\vmyhr\AppData\Local\Temp\ccR0Lff3.s 			page 2


  31:Core/Src/main.c **** #include "stdint.h"
  32:Core/Src/main.c **** #include "spi_slave_module.h"
  33:Core/Src/main.c **** #include "stdbool.h"
  34:Core/Src/main.c **** /* USER CODE END Includes */
  35:Core/Src/main.c **** 
  36:Core/Src/main.c **** /* Private typedef -----------------------------------------------------------*/
  37:Core/Src/main.c **** /* USER CODE BEGIN PTD */
  38:Core/Src/main.c **** 
  39:Core/Src/main.c **** /* USER CODE END PTD */
  40:Core/Src/main.c **** 
  41:Core/Src/main.c **** /* Private define ------------------------------------------------------------*/
  42:Core/Src/main.c **** /* USER CODE BEGIN PD */
  43:Core/Src/main.c **** 
  44:Core/Src/main.c **** /* USER CODE END PD */
  45:Core/Src/main.c **** 
  46:Core/Src/main.c **** /* Private macro -------------------------------------------------------------*/
  47:Core/Src/main.c **** /* USER CODE BEGIN PM */
  48:Core/Src/main.c **** 
  49:Core/Src/main.c **** /* USER CODE END PM */
  50:Core/Src/main.c **** 
  51:Core/Src/main.c **** /* Private variables ---------------------------------------------------------*/
  52:Core/Src/main.c **** 
  53:Core/Src/main.c **** /* USER CODE BEGIN PV */
  54:Core/Src/main.c **** uint16_t MS5803_coefficient[6];
  55:Core/Src/main.c **** #define NUM_MEASUREMENTS 1200
  56:Core/Src/main.c **** volatile uint8_t tellerflagg = 0u;
  57:Core/Src/main.c **** volatile uint8_t rx_data[12];
  58:Core/Src/main.c **** uint8_t gps_data[12] = {PASSIVE, 0xd1, 0xd1, 0xd1, 0xd2, 0xd2, 0xd2, 0xd2, 0xd3, 0xd3, 0xd3, 0xd3};
  59:Core/Src/main.c **** 
  60:Core/Src/main.c **** /* USER CODE END PV */
  61:Core/Src/main.c **** 
  62:Core/Src/main.c **** /* Private function prototypes -----------------------------------------------*/
  63:Core/Src/main.c **** void SystemClock_Config(void);
  64:Core/Src/main.c **** /* USER CODE BEGIN PFP */
  65:Core/Src/main.c **** 
  66:Core/Src/main.c **** /* USER CODE END PFP */
  67:Core/Src/main.c **** 
  68:Core/Src/main.c **** /* Private user code ---------------------------------------------------------*/
  69:Core/Src/main.c **** /* USER CODE BEGIN 0 */
  70:Core/Src/main.c **** 
  71:Core/Src/main.c **** /* USER CODE END 0 */
  72:Core/Src/main.c **** 
  73:Core/Src/main.c **** /**
  74:Core/Src/main.c ****   * @brief  The application entry point.
  75:Core/Src/main.c ****   * @retval int
  76:Core/Src/main.c ****   */
  77:Core/Src/main.c **** int main(void)
  78:Core/Src/main.c **** {
  79:Core/Src/main.c **** 
  80:Core/Src/main.c ****   /* USER CODE BEGIN 1 */
  81:Core/Src/main.c **** 
  82:Core/Src/main.c ****   /* USER CODE END 1 */
  83:Core/Src/main.c **** 
  84:Core/Src/main.c ****   /* MCU Configuration--------------------------------------------------------*/
  85:Core/Src/main.c **** 
  86:Core/Src/main.c ****   /* Reset of all peripherals, Initializes the Flash interface and the Systick. */
  87:Core/Src/main.c ****   HAL_Init();
ARM GAS  C:\Users\vmyhr\AppData\Local\Temp\ccR0Lff3.s 			page 3


  88:Core/Src/main.c **** 
  89:Core/Src/main.c ****   /* USER CODE BEGIN Init */
  90:Core/Src/main.c **** 
  91:Core/Src/main.c ****   /* USER CODE END Init */
  92:Core/Src/main.c **** 
  93:Core/Src/main.c ****   /* Configure the system clock */
  94:Core/Src/main.c ****   SystemClock_Config();
  95:Core/Src/main.c **** 
  96:Core/Src/main.c ****   /* USER CODE BEGIN SysInit */
  97:Core/Src/main.c **** 
  98:Core/Src/main.c ****   /* USER CODE END SysInit */
  99:Core/Src/main.c **** 
 100:Core/Src/main.c ****   /* Initialize all configured peripherals */
 101:Core/Src/main.c ****   MX_GPIO_Init();
 102:Core/Src/main.c ****   MX_I2C1_Init();
 103:Core/Src/main.c ****   MX_SPI3_Init();
 104:Core/Src/main.c ****   /* USER CODE BEGIN 2 */
 105:Core/Src/main.c ****   float pressureMeasurements[NUM_MEASUREMENTS]; // Array to store pressure measurements
 106:Core/Src/main.c ****   int measurementIndex = 0; // Index for the next measurement to be stored
 107:Core/Src/main.c ****   uint32_t lastMeasurementTime = 0; // Timestamp of the last measurement
 108:Core/Src/main.c ****   //HAL_GPIO_WritePin(GPIOA,GPIO_PIN_8,GPIO_PIN_SET);
 109:Core/Src/main.c ****   //while(1){
 110:Core/Src/main.c ****     //volatile GPIO_PinState proxvalue = HAL_GPIO_ReadPin(GPIOA,GPIO_PIN_7); // MÃ¥ling av verdi fr
 111:Core/Src/main.c **** 
 112:Core/Src/main.c ****   //} 
 113:Core/Src/main.c ****     //HAL_StatusTypeDef test = MS5803_reset(&hi2c1); //reset
 114:Core/Src/main.c ****     //uint8_t gps_address = (0x42 << 1);
 115:Core/Src/main.c ****     //HAL_StatusTypeDef test_device = HAL_I2C_IsDeviceReady(&hi2c1, gps_address, 10, 1000);
 116:Core/Src/main.c ****   //   uint8_t dev_address = (0x76 << 1);
 117:Core/Src/main.c ****   //   HAL_StatusTypeDef test_device = HAL_I2C_IsDeviceReady(&hi2c1, dev_address, 10, 1000);
 118:Core/Src/main.c ****   // while(test_device == HAL_ERROR) {
 119:Core/Src/main.c **** 	//   // if the test fails
 120:Core/Src/main.c ****   // }
 121:Core/Src/main.c ****   // for(int i = 1; i <= 6; i++) {
 122:Core/Src/main.c **** 	//       MS5803_coeff(&hi2c1, &MS5803_coefficient[i-1], i); //get coefficients
 123:Core/Src/main.c ****   //       } 
 124:Core/Src/main.c ****    
 125:Core/Src/main.c ****   /* USER CODE END 2 */
 126:Core/Src/main.c **** 
 127:Core/Src/main.c ****   /* Infinite loop */
 128:Core/Src/main.c ****   /* USER CODE BEGIN WHILE */
 129:Core/Src/main.c ****     // char print[32];
 130:Core/Src/main.c ****     //float temperature = 0.0f;
 131:Core/Src/main.c ****     //float pressure = 0.0f;
 132:Core/Src/main.c ****     // float temperature, pressure;
 133:Core/Src/main.c ****     // memset(pressureMeasurements, 0, sizeof(pressureMeasurements));
 134:Core/Src/main.c ****   // while (1)
 135:Core/Src/main.c ****   // {
 136:Core/Src/main.c ****   //   MS5803_get_values(&hi2c1, ADC_256, &temperature, &pressure);
 137:Core/Src/main.c ****   //   HAL_Delay(10);
 138:Core/Src/main.c ****     
 139:Core/Src/main.c ****     /* USER CODE END WHILE */
 140:Core/Src/main.c **** 
 141:Core/Src/main.c ****     /* USER CODE BEGIN 3 */
 142:Core/Src/main.c ****   // }
 143:Core/Src/main.c ****   while (1)
 144:Core/Src/main.c ****   {
ARM GAS  C:\Users\vmyhr\AppData\Local\Temp\ccR0Lff3.s 			page 4


 145:Core/Src/main.c ****     gps_data[0] = PASSIVE;
 146:Core/Src/main.c ****     gps_data[1] = 0xd1;
 147:Core/Src/main.c ****     gps_data[2] = 0xd1;
 148:Core/Src/main.c ****     gps_data[3] = 0xd1;
 149:Core/Src/main.c ****     gps_data[4] = 0xd2;
 150:Core/Src/main.c ****     gps_data[5] = 0xd2;
 151:Core/Src/main.c ****     gps_data[6] = 0xd2;
 152:Core/Src/main.c ****     gps_data[7] = 0xd2;
 153:Core/Src/main.c ****     gps_data[8] = 0xd3;
 154:Core/Src/main.c ****     gps_data[9] = 0xd3;
 155:Core/Src/main.c ****     gps_data[10] = 0xd3;
 156:Core/Src/main.c ****     gps_data[11] = 0xd3;
 157:Core/Src/main.c **** 
 158:Core/Src/main.c ****   
 159:Core/Src/main.c ****     
 160:Core/Src/main.c ****   // volatile GPIO_PinState dio1_em1 = HAL_GPIO_ReadPin(GPIO_IN_DIO1_GPIO_Port,GPIO_IN_DIO1_Pin); /
 161:Core/Src/main.c ****   // volatile GPIO_PinState dio2_em2 = HAL_GPIO_ReadPin(GPIO_IN_DIO2_GPIO_Port,GPIO_IN_DIO2_Pin); /
 162:Core/Src/main.c ****   // volatile GPIO_PinState dio3_td1 = HAL_GPIO_ReadPin(GPIO_IN_DIO3_GPIO_Port,GPIO_IN_DIO3_Pin); /
 163:Core/Src/main.c ****   // volatile GPIO_PinState dio4_td2 = HAL_GPIO_ReadPin(GPIO_IN_DIO4_GPIO_Port,GPIO_IN_DIO4_Pin); /
 164:Core/Src/main.c ****   // volatile GPIO_PinState foto = HAL_GPIO_ReadPin(GPIO_IN_FOTO_GPIO_Port,GPIO_IN_FOTO_Pin); // MÃ
 165:Core/Src/main.c ****   // volatile GPIO_PinState magn = HAL_GPIO_ReadPin(GPIO_IN_MAGN_GPIO_Port,GPIO_IN_MAGN_Pin); // MÃ
 166:Core/Src/main.c **** 
 167:Core/Src/main.c ****   // volatile GPIO_PinState heli = HAL_GPIO_ReadPin(GPIO_IN_HELI_GPIO_Port,GPIO_IN_HELI_Pin); // av
 168:Core/Src/main.c ****   //   if (magn == GPIO_PIN_SET && foto == GPIO_PIN_RESET && heli == GPIO_PIN_RESET){
 169:Core/Src/main.c ****   //     HAL_GPIO_WritePin(GPIO_OUT_TRANS2_GPIO_Port,GPIO_OUT_TRANS2_Pin,GPIO_PIN_SET);
 170:Core/Src/main.c ****   //   }else{  
 171:Core/Src/main.c ****   //     HAL_GPIO_WritePin(GPIO_OUT_TRANS2_GPIO_Port,GPIO_OUT_TRANS2_Pin,GPIO_PIN_RESET);
 172:Core/Src/main.c ****   //   }
 173:Core/Src/main.c ****   //   if (magn == GPIO_PIN_RESET && foto == GPIO_PIN_SET && heli == GPIO_PIN_SET){ 
 174:Core/Src/main.c ****   //     //tellerflagg = 1;
 175:Core/Src/main.c ****   //     HAL_GPIO_WritePin(GPIO_OUT_TRANS8_GPIO_Port,GPIO_OUT_TRANS8_Pin,GPIO_PIN_SET);
 176:Core/Src/main.c ****   //   }else { 
 177:Core/Src/main.c ****   //     HAL_GPIO_WritePin(GPIO_OUT_TRANS8_GPIO_Port,GPIO_OUT_TRANS8_Pin,GPIO_PIN_RESET);
 178:Core/Src/main.c ****   //   }
 179:Core/Src/main.c ****   // MS5803_get_values(&hi2c1, ADC_4096, &temperature, &pressure);
 180:Core/Src/main.c ****   //     if (measurementIndex < NUM_MEASUREMENTS) {
 181:Core/Src/main.c ****   //       pressureMeasurements[measurementIndex] = pressure; // Store the pressure measurement
 182:Core/Src/main.c ****   //       measurementIndex++; // Move to the next index for the next measurement
 183:Core/Src/main.c ****   //     } else {
 184:Core/Src/main.c ****   //       measurementIndex = 0; // Uncomment this line to start measurements over
 185:Core/Src/main.c ****         
 186:Core/Src/main.c ****   //     }
 187:Core/Src/main.c ****   //     lastMeasurementTime = HAL_GetTick(); // Update the timestamp of the last measurement
 188:Core/Src/main.c ****   //   }
 189:Core/Src/main.c ****     
 190:Core/Src/main.c ****     // Other tasks can be done here
 191:Core/Src/main.c ****   }
 192:Core/Src/main.c ****   /* USER CODE END 3 */
 193:Core/Src/main.c **** }
 194:Core/Src/main.c **** 
 195:Core/Src/main.c **** /**
 196:Core/Src/main.c ****   * @brief System Clock Configuration
 197:Core/Src/main.c ****   * @retval None
 198:Core/Src/main.c ****   */
 199:Core/Src/main.c **** void SystemClock_Config(void)
 200:Core/Src/main.c **** {
 201:Core/Src/main.c ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
ARM GAS  C:\Users\vmyhr\AppData\Local\Temp\ccR0Lff3.s 			page 5


 202:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 203:Core/Src/main.c **** 
 204:Core/Src/main.c ****   /** Configure the main internal regulator output voltage
 205:Core/Src/main.c ****   */
 206:Core/Src/main.c ****   HAL_PWREx_ControlVoltageScaling(PWR_REGULATOR_VOLTAGE_SCALE1_BOOST);
 207:Core/Src/main.c **** 
 208:Core/Src/main.c ****   /** Initializes the RCC Oscillators according to the specified parameters
 209:Core/Src/main.c ****   * in the RCC_OscInitTypeDef structure.
 210:Core/Src/main.c ****   */
 211:Core/Src/main.c ****   RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSI;
 212:Core/Src/main.c ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 213:Core/Src/main.c ****   RCC_OscInitStruct.HSICalibrationValue = RCC_HSICALIBRATION_DEFAULT;
 214:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 215:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSI;
 216:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLM = RCC_PLLM_DIV4;
 217:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLN = 85;
 218:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV2;
 219:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLQ = RCC_PLLQ_DIV2;
 220:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLR = RCC_PLLR_DIV2;
 221:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 222:Core/Src/main.c ****   {
 223:Core/Src/main.c ****     Error_Handler();
 224:Core/Src/main.c ****   }
 225:Core/Src/main.c **** 
 226:Core/Src/main.c ****   /** Initializes the CPU, AHB and APB buses clocks
 227:Core/Src/main.c ****   */
 228:Core/Src/main.c ****   RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 229:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 230:Core/Src/main.c ****   RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
 231:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 232:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV1;
 233:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 234:Core/Src/main.c **** 
 235:Core/Src/main.c ****   if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_4) != HAL_OK)
 236:Core/Src/main.c ****   {
 237:Core/Src/main.c ****     Error_Handler();
 238:Core/Src/main.c ****   }
 239:Core/Src/main.c **** }
 240:Core/Src/main.c **** 
 241:Core/Src/main.c **** /* USER CODE BEGIN 4 */
 242:Core/Src/main.c **** 
 243:Core/Src/main.c **** 
 244:Core/Src/main.c **** void SPI_WAIT_NOT_BUSY(SPI_TypeDef *SPIx)
 245:Core/Src/main.c **** {
  29              		.loc 1 245 1 view -0
  30              		.cfi_startproc
  31              		@ args = 0, pretend = 0, frame = 0
  32              		@ frame_needed = 0, uses_anonymous_args = 0
  33              		@ link register save eliminated.
  34              	.LVL0:
  35              	.L2:
 246:Core/Src/main.c ****     while ((SPIx->SR & SPI_SR_BSY));
  36              		.loc 1 246 12 discriminator 1 view .LVU1
  37              		.loc 1 246 17 is_stmt 0 discriminator 1 view .LVU2
  38 0000 8368     		ldr	r3, [r0, #8]
  39              		.loc 1 246 12 discriminator 1 view .LVU3
  40 0002 13F0800F 		tst	r3, #128
ARM GAS  C:\Users\vmyhr\AppData\Local\Temp\ccR0Lff3.s 			page 6


  41 0006 FBD1     		bne	.L2
 247:Core/Src/main.c **** }
  42              		.loc 1 247 1 view .LVU4
  43 0008 7047     		bx	lr
  44              		.cfi_endproc
  45              	.LFE137:
  47              		.section	.text.SPI_WAIT_TXE,"ax",%progbits
  48              		.align	1
  49              		.global	SPI_WAIT_TXE
  50              		.syntax unified
  51              		.thumb
  52              		.thumb_func
  54              	SPI_WAIT_TXE:
  55              	.LFB138:
 248:Core/Src/main.c **** 
 249:Core/Src/main.c **** void SPI_WAIT_TXE(SPI_TypeDef *SPIx)
 250:Core/Src/main.c **** {
  56              		.loc 1 250 1 is_stmt 1 view -0
  57              		.cfi_startproc
  58              		@ args = 0, pretend = 0, frame = 0
  59              		@ frame_needed = 0, uses_anonymous_args = 0
  60              		@ link register save eliminated.
  61              	.LVL1:
  62              	.L4:
 251:Core/Src/main.c ****     while (!(SPIx->SR & SPI_SR_TXE));
  63              		.loc 1 251 12 discriminator 1 view .LVU6
  64              		.loc 1 251 18 is_stmt 0 discriminator 1 view .LVU7
  65 0000 8368     		ldr	r3, [r0, #8]
  66              		.loc 1 251 12 discriminator 1 view .LVU8
  67 0002 13F0020F 		tst	r3, #2
  68 0006 FBD0     		beq	.L4
 252:Core/Src/main.c **** }
  69              		.loc 1 252 1 view .LVU9
  70 0008 7047     		bx	lr
  71              		.cfi_endproc
  72              	.LFE138:
  74              		.section	.text.SPI_READ_DR,"ax",%progbits
  75              		.align	1
  76              		.global	SPI_READ_DR
  77              		.syntax unified
  78              		.thumb
  79              		.thumb_func
  81              	SPI_READ_DR:
  82              	.LVL2:
  83              	.LFB139:
 253:Core/Src/main.c **** uint8_t SPI_READ_DR(SPI_TypeDef *SPIx)
 254:Core/Src/main.c **** {
  84              		.loc 1 254 1 is_stmt 1 view -0
  85              		.cfi_startproc
  86              		@ args = 0, pretend = 0, frame = 0
  87              		@ frame_needed = 0, uses_anonymous_args = 0
  88              		@ link register save eliminated.
 255:Core/Src/main.c ****     return (uint8_t)(SPIx->DR);
  89              		.loc 1 255 5 view .LVU11
  90              		.loc 1 255 26 is_stmt 0 view .LVU12
  91 0000 C068     		ldr	r0, [r0, #12]
  92              	.LVL3:
ARM GAS  C:\Users\vmyhr\AppData\Local\Temp\ccR0Lff3.s 			page 7


 256:Core/Src/main.c **** }
  93              		.loc 1 256 1 view .LVU13
  94 0002 C0B2     		uxtb	r0, r0
  95 0004 7047     		bx	lr
  96              		.cfi_endproc
  97              	.LFE139:
  99              		.section	.text.SPI_CLEAR_DR,"ax",%progbits
 100              		.align	1
 101              		.global	SPI_CLEAR_DR
 102              		.syntax unified
 103              		.thumb
 104              		.thumb_func
 106              	SPI_CLEAR_DR:
 107              	.LVL4:
 108              	.LFB140:
 257:Core/Src/main.c **** void SPI_CLEAR_DR(SPI_TypeDef *SPIx)
 258:Core/Src/main.c **** {
 109              		.loc 1 258 1 is_stmt 1 view -0
 110              		.cfi_startproc
 111              		@ args = 0, pretend = 0, frame = 0
 112              		@ frame_needed = 0, uses_anonymous_args = 0
 113              		@ link register save eliminated.
 259:Core/Src/main.c ****     (void)(SPIx->DR);
 114              		.loc 1 259 5 view .LVU15
 115 0000 C368     		ldr	r3, [r0, #12]
 260:Core/Src/main.c **** }
 116              		.loc 1 260 1 is_stmt 0 view .LVU16
 117 0002 7047     		bx	lr
 118              		.cfi_endproc
 119              	.LFE140:
 121              		.section	.text.SPI_WAIT_RXNE,"ax",%progbits
 122              		.align	1
 123              		.global	SPI_WAIT_RXNE
 124              		.syntax unified
 125              		.thumb
 126              		.thumb_func
 128              	SPI_WAIT_RXNE:
 129              	.LFB141:
 261:Core/Src/main.c **** void SPI_WAIT_RXNE(SPI_TypeDef *SPIx)
 262:Core/Src/main.c **** {
 130              		.loc 1 262 1 is_stmt 1 view -0
 131              		.cfi_startproc
 132              		@ args = 0, pretend = 0, frame = 0
 133              		@ frame_needed = 0, uses_anonymous_args = 0
 134              		@ link register save eliminated.
 135              	.LVL5:
 136              	.L8:
 263:Core/Src/main.c ****     while (!(SPIx->SR & SPI_SR_RXNE));
 137              		.loc 1 263 12 discriminator 1 view .LVU18
 138              		.loc 1 263 18 is_stmt 0 discriminator 1 view .LVU19
 139 0000 8368     		ldr	r3, [r0, #8]
 140              		.loc 1 263 12 discriminator 1 view .LVU20
 141 0002 13F0010F 		tst	r3, #1
 142 0006 FBD0     		beq	.L8
 264:Core/Src/main.c **** }
 143              		.loc 1 264 1 view .LVU21
 144 0008 7047     		bx	lr
ARM GAS  C:\Users\vmyhr\AppData\Local\Temp\ccR0Lff3.s 			page 8


 145              		.cfi_endproc
 146              	.LFE141:
 148              		.section	.text.SPI_WRITE_DR,"ax",%progbits
 149              		.align	1
 150              		.global	SPI_WRITE_DR
 151              		.syntax unified
 152              		.thumb
 153              		.thumb_func
 155              	SPI_WRITE_DR:
 156              	.LVL6:
 157              	.LFB142:
 265:Core/Src/main.c **** void SPI_WRITE_DR(SPI_TypeDef *SPIx, uint8_t DATA)
 266:Core/Src/main.c **** {
 158              		.loc 1 266 1 is_stmt 1 view -0
 159              		.cfi_startproc
 160              		@ args = 0, pretend = 0, frame = 0
 161              		@ frame_needed = 0, uses_anonymous_args = 0
 162              		@ link register save eliminated.
 267:Core/Src/main.c ****    * ((volatile uint8_t *)&(SPIx->DR)) = DATA;
 163              		.loc 1 267 4 view .LVU23
 164              		.loc 1 267 40 is_stmt 0 view .LVU24
 165 0000 0173     		strb	r1, [r0, #12]
 268:Core/Src/main.c **** }
 166              		.loc 1 268 1 view .LVU25
 167 0002 7047     		bx	lr
 168              		.cfi_endproc
 169              	.LFE142:
 171              		.section	.text.enable_spi,"ax",%progbits
 172              		.align	1
 173              		.global	enable_spi
 174              		.syntax unified
 175              		.thumb
 176              		.thumb_func
 178              	enable_spi:
 179              	.LVL7:
 180              	.LFB143:
 269:Core/Src/main.c **** void enable_spi(SPI_TypeDef *SPIx)
 270:Core/Src/main.c **** {
 181              		.loc 1 270 1 is_stmt 1 view -0
 182              		.cfi_startproc
 183              		@ args = 0, pretend = 0, frame = 0
 184              		@ frame_needed = 0, uses_anonymous_args = 0
 185              		@ link register save eliminated.
 271:Core/Src/main.c ****     SPIx->CR1 |= SPI_CR1_SPE; // enabling SPI
 186              		.loc 1 271 5 view .LVU27
 187              		.loc 1 271 9 is_stmt 0 view .LVU28
 188 0000 0368     		ldr	r3, [r0]
 189              		.loc 1 271 15 view .LVU29
 190 0002 43F04003 		orr	r3, r3, #64
 191 0006 0360     		str	r3, [r0]
 272:Core/Src/main.c **** }
 192              		.loc 1 272 1 view .LVU30
 193 0008 7047     		bx	lr
 194              		.cfi_endproc
 195              	.LFE143:
 197              		.section	.text.disable_spi,"ax",%progbits
 198              		.align	1
ARM GAS  C:\Users\vmyhr\AppData\Local\Temp\ccR0Lff3.s 			page 9


 199              		.global	disable_spi
 200              		.syntax unified
 201              		.thumb
 202              		.thumb_func
 204              	disable_spi:
 205              	.LVL8:
 206              	.LFB144:
 273:Core/Src/main.c **** 
 274:Core/Src/main.c **** void disable_spi(SPI_TypeDef *SPIx)
 275:Core/Src/main.c **** {
 207              		.loc 1 275 1 is_stmt 1 view -0
 208              		.cfi_startproc
 209              		@ args = 0, pretend = 0, frame = 0
 210              		@ frame_needed = 0, uses_anonymous_args = 0
 211              		@ link register save eliminated.
 276:Core/Src/main.c ****     SPIx->CR1 &= ~SPI_CR1_SPE; // disable SPI
 212              		.loc 1 276 5 view .LVU32
 213              		.loc 1 276 9 is_stmt 0 view .LVU33
 214 0000 0368     		ldr	r3, [r0]
 215              		.loc 1 276 15 view .LVU34
 216 0002 23F04003 		bic	r3, r3, #64
 217 0006 0360     		str	r3, [r0]
 277:Core/Src/main.c **** }
 218              		.loc 1 277 1 view .LVU35
 219 0008 7047     		bx	lr
 220              		.cfi_endproc
 221              	.LFE144:
 223              		.section	.text.SPI_Transmit,"ax",%progbits
 224              		.align	1
 225              		.global	SPI_Transmit
 226              		.syntax unified
 227              		.thumb
 228              		.thumb_func
 230              	SPI_Transmit:
 231              	.LVL9:
 232              	.LFB145:
 278:Core/Src/main.c **** HAL_StatusTypeDef SPI_Transmit(SPI_TypeDef *SPIx, uint8_t *ptr_SendData, uint16_t Size)
 279:Core/Src/main.c **** {
 233              		.loc 1 279 1 is_stmt 1 view -0
 234              		.cfi_startproc
 235              		@ args = 0, pretend = 0, frame = 0
 236              		@ frame_needed = 0, uses_anonymous_args = 0
 237              		.loc 1 279 1 is_stmt 0 view .LVU37
 238 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 239              		.cfi_def_cfa_offset 24
 240              		.cfi_offset 3, -24
 241              		.cfi_offset 4, -20
 242              		.cfi_offset 5, -16
 243              		.cfi_offset 6, -12
 244              		.cfi_offset 7, -8
 245              		.cfi_offset 14, -4
 246 0002 0446     		mov	r4, r0
 247 0004 0F46     		mov	r7, r1
 248 0006 1646     		mov	r6, r2
 280:Core/Src/main.c ****     enable_spi(SPIx);
 249              		.loc 1 280 5 is_stmt 1 view .LVU38
 250 0008 FFF7FEFF 		bl	enable_spi
ARM GAS  C:\Users\vmyhr\AppData\Local\Temp\ccR0Lff3.s 			page 10


 251              	.LVL10:
 281:Core/Src/main.c ****     // Add your own logic for asserting CS here
 282:Core/Src/main.c **** 
 283:Core/Src/main.c ****     for (size_t i = 0; i < Size; i++)
 252              		.loc 1 283 5 view .LVU39
 253              	.LBB4:
 254              		.loc 1 283 10 view .LVU40
 255              		.loc 1 283 17 is_stmt 0 view .LVU41
 256 000c 0025     		movs	r5, #0
 257              		.loc 1 283 5 view .LVU42
 258 000e 0DE0     		b	.L13
 259              	.LVL11:
 260              	.L14:
 284:Core/Src/main.c ****     {
 285:Core/Src/main.c ****         SPI_WAIT_TXE(SPIx); // waiting until transmit buffer is empty
 261              		.loc 1 285 9 is_stmt 1 view .LVU43
 262 0010 2046     		mov	r0, r4
 263 0012 FFF7FEFF 		bl	SPI_WAIT_TXE
 264              	.LVL12:
 286:Core/Src/main.c ****         SPI_WRITE_DR(SPIx, ptr_SendData[i]); // data register is receiving the commands from the ar
 265              		.loc 1 286 9 view .LVU44
 266 0016 795D     		ldrb	r1, [r7, r5]	@ zero_extendqisi2
 267 0018 2046     		mov	r0, r4
 268 001a FFF7FEFF 		bl	SPI_WRITE_DR
 269              	.LVL13:
 287:Core/Src/main.c ****         SPI_WAIT_RXNE(SPIx); // polling data on Receive buffer not empty(RXNE) so we know the data 
 270              		.loc 1 287 9 view .LVU45
 271 001e 2046     		mov	r0, r4
 272 0020 FFF7FEFF 		bl	SPI_WAIT_RXNE
 273              	.LVL14:
 288:Core/Src/main.c ****         // if (!spi_wait_rxne_timeout(SPIx, 10))
 289:Core/Src/main.c ****         // {
 290:Core/Src/main.c ****         //     return HAL_TIMEOUT;
 291:Core/Src/main.c ****         // }
 292:Core/Src/main.c ****         // reading the received data from SPI data register so the RXNE flag gets cleared. This is 
 293:Core/Src/main.c ****         SPI_CLEAR_DR(SPIx); // casting to void so I can ignore compiler warning on unused variables
 274              		.loc 1 293 9 view .LVU46
 275 0024 2046     		mov	r0, r4
 276 0026 FFF7FEFF 		bl	SPI_CLEAR_DR
 277              	.LVL15:
 283:Core/Src/main.c ****     {
 278              		.loc 1 283 35 discriminator 3 view .LVU47
 279 002a 0135     		adds	r5, r5, #1
 280              	.LVL16:
 281              	.L13:
 283:Core/Src/main.c ****     {
 282              		.loc 1 283 26 discriminator 1 view .LVU48
 283 002c AE42     		cmp	r6, r5
 284 002e EFD8     		bhi	.L14
 285              	.LBE4:
 294:Core/Src/main.c ****     }
 295:Core/Src/main.c ****     SPI_WAIT_NOT_BUSY(SPIx); // checking when SPI is ready.
 286              		.loc 1 295 5 view .LVU49
 287 0030 2046     		mov	r0, r4
 288 0032 FFF7FEFF 		bl	SPI_WAIT_NOT_BUSY
 289              	.LVL17:
 296:Core/Src/main.c ****     // add your own logic for deasserting CS here
ARM GAS  C:\Users\vmyhr\AppData\Local\Temp\ccR0Lff3.s 			page 11


 297:Core/Src/main.c ****     disable_spi(SPIx);
 290              		.loc 1 297 5 view .LVU50
 291 0036 2046     		mov	r0, r4
 292 0038 FFF7FEFF 		bl	disable_spi
 293              	.LVL18:
 298:Core/Src/main.c ****     return HAL_OK;
 294              		.loc 1 298 5 view .LVU51
 299:Core/Src/main.c **** }
 295              		.loc 1 299 1 is_stmt 0 view .LVU52
 296 003c 0020     		movs	r0, #0
 297 003e F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 298              		.loc 1 299 1 view .LVU53
 299              		.cfi_endproc
 300              	.LFE145:
 302              		.section	.text.SPI_Receive,"ax",%progbits
 303              		.align	1
 304              		.global	SPI_Receive
 305              		.syntax unified
 306              		.thumb
 307              		.thumb_func
 309              	SPI_Receive:
 310              	.LVL19:
 311              	.LFB146:
 300:Core/Src/main.c **** 
 301:Core/Src/main.c **** HAL_StatusTypeDef SPI_Receive(SPI_TypeDef *SPIx, uint8_t *ptr_ReceiveData, uint16_t Size)
 302:Core/Src/main.c **** {
 312              		.loc 1 302 1 is_stmt 1 view -0
 313              		.cfi_startproc
 314              		@ args = 0, pretend = 0, frame = 0
 315              		@ frame_needed = 0, uses_anonymous_args = 0
 316              		.loc 1 302 1 is_stmt 0 view .LVU55
 317 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 318              		.cfi_def_cfa_offset 24
 319              		.cfi_offset 3, -24
 320              		.cfi_offset 4, -20
 321              		.cfi_offset 5, -16
 322              		.cfi_offset 6, -12
 323              		.cfi_offset 7, -8
 324              		.cfi_offset 14, -4
 325 0002 0446     		mov	r4, r0
 326 0004 0F46     		mov	r7, r1
 327 0006 1646     		mov	r6, r2
 303:Core/Src/main.c ****     enable_spi(SPIx);
 328              		.loc 1 303 5 is_stmt 1 view .LVU56
 329 0008 FFF7FEFF 		bl	enable_spi
 330              	.LVL20:
 304:Core/Src/main.c ****     // Add your own logic for asserting CS here
 305:Core/Src/main.c ****     for (size_t i = 0; i < Size; i++)
 331              		.loc 1 305 5 view .LVU57
 332              	.LBB5:
 333              		.loc 1 305 10 view .LVU58
 334              		.loc 1 305 17 is_stmt 0 view .LVU59
 335 000c 0025     		movs	r5, #0
 336              		.loc 1 305 5 view .LVU60
 337 000e 0EE0     		b	.L17
 338              	.LVL21:
 339              	.L18:
ARM GAS  C:\Users\vmyhr\AppData\Local\Temp\ccR0Lff3.s 			page 12


 306:Core/Src/main.c ****     {
 307:Core/Src/main.c ****         // SPI_WAIT_NOT_BUSY(SPIx); // checking when SPI is ready.
 308:Core/Src/main.c ****         SPI_WAIT_TXE(SPIx);
 340              		.loc 1 308 9 is_stmt 1 view .LVU61
 341 0010 2046     		mov	r0, r4
 342 0012 FFF7FEFF 		bl	SPI_WAIT_TXE
 343              	.LVL22:
 309:Core/Src/main.c ****         SPI_WRITE_DR(SPIx, 0xFF); // clocking out dummy bytes
 344              		.loc 1 309 9 view .LVU62
 345 0016 FF21     		movs	r1, #255
 346 0018 2046     		mov	r0, r4
 347 001a FFF7FEFF 		bl	SPI_WRITE_DR
 348              	.LVL23:
 310:Core/Src/main.c ****         // if (!spi_wait_rxne_timeout(SPIx, 10))
 311:Core/Src/main.c ****         // {
 312:Core/Src/main.c ****         //     return HAL_TIMEOUT;
 313:Core/Src/main.c ****         // }
 314:Core/Src/main.c ****         SPI_WAIT_RXNE(SPIx);
 349              		.loc 1 314 9 view .LVU63
 350 001e 2046     		mov	r0, r4
 351 0020 FFF7FEFF 		bl	SPI_WAIT_RXNE
 352              	.LVL24:
 315:Core/Src/main.c ****         ptr_ReceiveData[i] = SPI_READ_DR(SPIx);
 353              		.loc 1 315 9 view .LVU64
 354              		.loc 1 315 30 is_stmt 0 view .LVU65
 355 0024 2046     		mov	r0, r4
 356 0026 FFF7FEFF 		bl	SPI_READ_DR
 357              	.LVL25:
 358              		.loc 1 315 28 discriminator 1 view .LVU66
 359 002a 7855     		strb	r0, [r7, r5]
 305:Core/Src/main.c ****     {
 360              		.loc 1 305 35 is_stmt 1 discriminator 3 view .LVU67
 361 002c 0135     		adds	r5, r5, #1
 362              	.LVL26:
 363              	.L17:
 305:Core/Src/main.c ****     {
 364              		.loc 1 305 26 discriminator 1 view .LVU68
 365 002e AE42     		cmp	r6, r5
 366 0030 EED8     		bhi	.L18
 367              	.LBE5:
 316:Core/Src/main.c ****     }
 317:Core/Src/main.c ****     SPI_WAIT_NOT_BUSY(SPIx);
 368              		.loc 1 317 5 view .LVU69
 369 0032 2046     		mov	r0, r4
 370 0034 FFF7FEFF 		bl	SPI_WAIT_NOT_BUSY
 371              	.LVL27:
 318:Core/Src/main.c ****     return HAL_OK;
 372              		.loc 1 318 5 view .LVU70
 319:Core/Src/main.c **** }
 373              		.loc 1 319 1 is_stmt 0 view .LVU71
 374 0038 0020     		movs	r0, #0
 375 003a F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 376              		.loc 1 319 1 view .LVU72
 377              		.cfi_endproc
 378              	.LFE146:
 380              		.section	.text.SPI_TransmitReceive,"ax",%progbits
 381              		.align	1
ARM GAS  C:\Users\vmyhr\AppData\Local\Temp\ccR0Lff3.s 			page 13


 382              		.global	SPI_TransmitReceive
 383              		.syntax unified
 384              		.thumb
 385              		.thumb_func
 387              	SPI_TransmitReceive:
 388              	.LVL28:
 389              	.LFB147:
 320:Core/Src/main.c **** 
 321:Core/Src/main.c **** HAL_StatusTypeDef SPI_TransmitReceive(SPI_TypeDef *SPIx, uint8_t *ptr_SendData, uint8_t *ptr_Receiv
 322:Core/Src/main.c **** {
 390              		.loc 1 322 1 is_stmt 1 view -0
 391              		.cfi_startproc
 392              		@ args = 0, pretend = 0, frame = 0
 393              		@ frame_needed = 0, uses_anonymous_args = 0
 394              		.loc 1 322 1 is_stmt 0 view .LVU74
 395 0000 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
 396              		.cfi_def_cfa_offset 24
 397              		.cfi_offset 4, -24
 398              		.cfi_offset 5, -20
 399              		.cfi_offset 6, -16
 400              		.cfi_offset 7, -12
 401              		.cfi_offset 8, -8
 402              		.cfi_offset 14, -4
 403 0004 0546     		mov	r5, r0
 404 0006 8846     		mov	r8, r1
 405 0008 1746     		mov	r7, r2
 406 000a 1E46     		mov	r6, r3
 323:Core/Src/main.c ****     enable_spi(SPIx);
 407              		.loc 1 323 5 is_stmt 1 view .LVU75
 408 000c FFF7FEFF 		bl	enable_spi
 409              	.LVL29:
 324:Core/Src/main.c ****     // Add your own logic for asserting CS here
 325:Core/Src/main.c **** 
 326:Core/Src/main.c ****     for (size_t i = 0; i < Size; i++)
 410              		.loc 1 326 5 view .LVU76
 411              	.LBB6:
 412              		.loc 1 326 10 view .LVU77
 413              		.loc 1 326 17 is_stmt 0 view .LVU78
 414 0010 0024     		movs	r4, #0
 415              		.loc 1 326 5 view .LVU79
 416 0012 0FE0     		b	.L21
 417              	.LVL30:
 418              	.L22:
 327:Core/Src/main.c ****     {
 328:Core/Src/main.c ****         SPI_WAIT_TXE(SPIx); // Wait until transmit buffer is empty
 419              		.loc 1 328 9 is_stmt 1 view .LVU80
 420 0014 2846     		mov	r0, r5
 421 0016 FFF7FEFF 		bl	SPI_WAIT_TXE
 422              	.LVL31:
 329:Core/Src/main.c ****         SPI_WRITE_DR(SPIx, ptr_SendData[i]); // Send data
 423              		.loc 1 329 9 view .LVU81
 424 001a 18F80410 		ldrb	r1, [r8, r4]	@ zero_extendqisi2
 425 001e 2846     		mov	r0, r5
 426 0020 FFF7FEFF 		bl	SPI_WRITE_DR
 427              	.LVL32:
 330:Core/Src/main.c ****         SPI_WAIT_RXNE(SPIx); // Wait for the data to be received
 428              		.loc 1 330 9 view .LVU82
ARM GAS  C:\Users\vmyhr\AppData\Local\Temp\ccR0Lff3.s 			page 14


 429 0024 2846     		mov	r0, r5
 430 0026 FFF7FEFF 		bl	SPI_WAIT_RXNE
 431              	.LVL33:
 331:Core/Src/main.c ****         // Wait for the data to be received
 332:Core/Src/main.c ****         // if (!spi_wait_rxne_timeout(SPIx, 10))
 333:Core/Src/main.c ****         // {
 334:Core/Src/main.c ****         //     // Optionally, deassert CS here
 335:Core/Src/main.c ****         //     disable_spi(SPIx);
 336:Core/Src/main.c ****         //     return HAL_TIMEOUT;
 337:Core/Src/main.c ****         // }
 338:Core/Src/main.c **** 
 339:Core/Src/main.c ****         // Read the received data
 340:Core/Src/main.c ****         ptr_ReceiveData[i] = SPI_READ_DR(SPIx);
 432              		.loc 1 340 9 view .LVU83
 433              		.loc 1 340 30 is_stmt 0 view .LVU84
 434 002a 2846     		mov	r0, r5
 435 002c FFF7FEFF 		bl	SPI_READ_DR
 436              	.LVL34:
 437              		.loc 1 340 28 discriminator 1 view .LVU85
 438 0030 3855     		strb	r0, [r7, r4]
 326:Core/Src/main.c ****     {
 439              		.loc 1 326 35 is_stmt 1 discriminator 3 view .LVU86
 440 0032 0134     		adds	r4, r4, #1
 441              	.LVL35:
 442              	.L21:
 326:Core/Src/main.c ****     {
 443              		.loc 1 326 26 discriminator 1 view .LVU87
 444 0034 A642     		cmp	r6, r4
 445 0036 EDD8     		bhi	.L22
 446              	.LBE6:
 341:Core/Src/main.c ****     }
 342:Core/Src/main.c **** 
 343:Core/Src/main.c ****     // Wait until SPI is not busy to ensure all data has been exchanged
 344:Core/Src/main.c ****     SPI_WAIT_NOT_BUSY(SPIx);
 447              		.loc 1 344 5 view .LVU88
 448 0038 2846     		mov	r0, r5
 449 003a FFF7FEFF 		bl	SPI_WAIT_NOT_BUSY
 450              	.LVL36:
 345:Core/Src/main.c **** 
 346:Core/Src/main.c ****     // Optionally, deassert CS here
 347:Core/Src/main.c ****     disable_spi(SPIx);
 451              		.loc 1 347 5 view .LVU89
 452 003e 2846     		mov	r0, r5
 453 0040 FFF7FEFF 		bl	disable_spi
 454              	.LVL37:
 348:Core/Src/main.c ****     return HAL_OK;
 455              		.loc 1 348 5 view .LVU90
 349:Core/Src/main.c **** }
 456              		.loc 1 349 1 is_stmt 0 view .LVU91
 457 0044 0020     		movs	r0, #0
 458 0046 BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 459              		.loc 1 349 1 view .LVU92
 460              		.cfi_endproc
 461              	.LFE147:
 463              		.section	.text.Error_Handler,"ax",%progbits
 464              		.align	1
 465              		.global	Error_Handler
ARM GAS  C:\Users\vmyhr\AppData\Local\Temp\ccR0Lff3.s 			page 15


 466              		.syntax unified
 467              		.thumb
 468              		.thumb_func
 470              	Error_Handler:
 471              	.LFB148:
 350:Core/Src/main.c **** 
 351:Core/Src/main.c **** 
 352:Core/Src/main.c **** /* USER CODE END 4 */
 353:Core/Src/main.c **** 
 354:Core/Src/main.c **** /**
 355:Core/Src/main.c ****   * @brief  This function is executed in case of error occurrence.
 356:Core/Src/main.c ****   * @retval None
 357:Core/Src/main.c ****   */
 358:Core/Src/main.c **** void Error_Handler(void)
 359:Core/Src/main.c **** {
 472              		.loc 1 359 1 is_stmt 1 view -0
 473              		.cfi_startproc
 474              		@ Volatile: function does not return.
 475              		@ args = 0, pretend = 0, frame = 0
 476              		@ frame_needed = 0, uses_anonymous_args = 0
 477              		@ link register save eliminated.
 360:Core/Src/main.c ****   /* USER CODE BEGIN Error_Handler_Debug */
 361:Core/Src/main.c ****   /* User can add his own implementation to report the HAL error return state */
 362:Core/Src/main.c ****   __disable_irq();
 478              		.loc 1 362 3 view .LVU94
 479              	.LBB7:
 480              	.LBI7:
 481              		.file 2 "Drivers/CMSIS/Include/cmsis_gcc.h"
   1:Drivers/CMSIS/Include/cmsis_gcc.h **** /**************************************************************************//**
   2:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @file     cmsis_gcc.h
   3:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @brief    CMSIS compiler GCC header file
   4:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @version  V5.2.0
   5:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @date     08. May 2019
   6:Drivers/CMSIS/Include/cmsis_gcc.h ****  ******************************************************************************/
   7:Drivers/CMSIS/Include/cmsis_gcc.h **** /*
   8:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Copyright (c) 2009-2019 Arm Limited. All rights reserved.
   9:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  10:Drivers/CMSIS/Include/cmsis_gcc.h ****  * SPDX-License-Identifier: Apache-2.0
  11:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  12:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Licensed under the Apache License, Version 2.0 (the License); you may
  13:Drivers/CMSIS/Include/cmsis_gcc.h ****  * not use this file except in compliance with the License.
  14:Drivers/CMSIS/Include/cmsis_gcc.h ****  * You may obtain a copy of the License at
  15:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  16:Drivers/CMSIS/Include/cmsis_gcc.h ****  * www.apache.org/licenses/LICENSE-2.0
  17:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  18:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Unless required by applicable law or agreed to in writing, software
  19:Drivers/CMSIS/Include/cmsis_gcc.h ****  * distributed under the License is distributed on an AS IS BASIS, WITHOUT
  20:Drivers/CMSIS/Include/cmsis_gcc.h ****  * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  21:Drivers/CMSIS/Include/cmsis_gcc.h ****  * See the License for the specific language governing permissions and
  22:Drivers/CMSIS/Include/cmsis_gcc.h ****  * limitations under the License.
  23:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
  24:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  25:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __CMSIS_GCC_H
  26:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_H
  27:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  28:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ignore some GCC warnings */
  29:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic push
ARM GAS  C:\Users\vmyhr\AppData\Local\Temp\ccR0Lff3.s 			page 16


  30:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wsign-conversion"
  31:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wconversion"
  32:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wunused-parameter"
  33:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  34:Drivers/CMSIS/Include/cmsis_gcc.h **** /* Fallback for __has_builtin */
  35:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __has_builtin
  36:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __has_builtin(x) (0)
  37:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  38:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  39:Drivers/CMSIS/Include/cmsis_gcc.h **** /* CMSIS compiler specific defines */
  40:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ASM
  41:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ASM                                  __asm
  42:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  43:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __INLINE
  44:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __INLINE                               inline
  45:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  46:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_INLINE
  47:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_INLINE                        static inline
  48:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  49:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_FORCEINLINE                 
  50:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_FORCEINLINE                   __attribute__((always_inline)) static inline
  51:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif                                           
  52:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __NO_RETURN
  53:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __NO_RETURN                            __attribute__((__noreturn__))
  54:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  55:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __USED
  56:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __USED                                 __attribute__((used))
  57:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  58:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __WEAK
  59:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __WEAK                                 __attribute__((weak))
  60:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  61:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED
  62:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED                               __attribute__((packed, aligned(1)))
  63:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  64:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_STRUCT
  65:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_STRUCT                        struct __attribute__((packed, aligned(1)))
  66:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  67:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_UNION
  68:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_UNION                         union __attribute__((packed, aligned(1)))
  69:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  70:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32        /* deprecated */
  71:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  72:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  73:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  74:Drivers/CMSIS/Include/cmsis_gcc.h ****   struct __attribute__((packed)) T_UINT32 { uint32_t v; };
  75:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  76:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32(x)                  (((struct T_UINT32 *)(x))->v)
  77:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  78:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_WRITE
  79:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  80:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  81:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  82:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_WRITE { uint16_t v; };
  83:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  84:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_WRITE(addr, val)    (void)((((struct T_UINT16_WRITE *)(void *)(addr))-
  85:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  86:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_READ
ARM GAS  C:\Users\vmyhr\AppData\Local\Temp\ccR0Lff3.s 			page 17


  87:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  88:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  89:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  90:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_READ { uint16_t v; };
  91:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  92:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_READ(addr)          (((const struct T_UINT16_READ *)(const void *)(add
  93:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  94:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_WRITE
  95:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  96:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  97:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  98:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_WRITE { uint32_t v; };
  99:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 100:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_WRITE(addr, val)    (void)((((struct T_UINT32_WRITE *)(void *)(addr))-
 101:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 102:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_READ
 103:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
 104:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
 105:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
 106:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_READ { uint32_t v; };
 107:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 108:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_READ(addr)          (((const struct T_UINT32_READ *)(const void *)(add
 109:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 110:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ALIGNED
 111:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ALIGNED(x)                           __attribute__((aligned(x)))
 112:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 113:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __RESTRICT
 114:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __RESTRICT                             __restrict
 115:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 116:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __COMPILER_BARRIER
 117:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __COMPILER_BARRIER()                   __ASM volatile("":::"memory")
 118:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 119:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 120:Drivers/CMSIS/Include/cmsis_gcc.h **** /* #########################  Startup and Lowlevel Init  ######################## */
 121:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 122:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __PROGRAM_START
 123:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 124:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 125:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Initializes data and bss sections
 126:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details This default implementations initialized all data and additional bss
 127:Drivers/CMSIS/Include/cmsis_gcc.h ****            sections relying on .copy.table and .zero.table specified properly
 128:Drivers/CMSIS/Include/cmsis_gcc.h ****            in the used linker script.
 129:Drivers/CMSIS/Include/cmsis_gcc.h ****   
 130:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 131:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE __NO_RETURN void __cmsis_start(void)
 132:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 133:Drivers/CMSIS/Include/cmsis_gcc.h ****   extern void _start(void) __NO_RETURN;
 134:Drivers/CMSIS/Include/cmsis_gcc.h ****   
 135:Drivers/CMSIS/Include/cmsis_gcc.h ****   typedef struct {
 136:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t const* src;
 137:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t* dest;
 138:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t  wlen;
 139:Drivers/CMSIS/Include/cmsis_gcc.h ****   } __copy_table_t;
 140:Drivers/CMSIS/Include/cmsis_gcc.h ****   
 141:Drivers/CMSIS/Include/cmsis_gcc.h ****   typedef struct {
 142:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t* dest;
 143:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t  wlen;
ARM GAS  C:\Users\vmyhr\AppData\Local\Temp\ccR0Lff3.s 			page 18


 144:Drivers/CMSIS/Include/cmsis_gcc.h ****   } __zero_table_t;
 145:Drivers/CMSIS/Include/cmsis_gcc.h ****   
 146:Drivers/CMSIS/Include/cmsis_gcc.h ****   extern const __copy_table_t __copy_table_start__;
 147:Drivers/CMSIS/Include/cmsis_gcc.h ****   extern const __copy_table_t __copy_table_end__;
 148:Drivers/CMSIS/Include/cmsis_gcc.h ****   extern const __zero_table_t __zero_table_start__;
 149:Drivers/CMSIS/Include/cmsis_gcc.h ****   extern const __zero_table_t __zero_table_end__;
 150:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 151:Drivers/CMSIS/Include/cmsis_gcc.h ****   for (__copy_table_t const* pTable = &__copy_table_start__; pTable < &__copy_table_end__; ++pTable
 152:Drivers/CMSIS/Include/cmsis_gcc.h ****     for(uint32_t i=0u; i<pTable->wlen; ++i) {
 153:Drivers/CMSIS/Include/cmsis_gcc.h ****       pTable->dest[i] = pTable->src[i];
 154:Drivers/CMSIS/Include/cmsis_gcc.h ****     }
 155:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 156:Drivers/CMSIS/Include/cmsis_gcc.h ****  
 157:Drivers/CMSIS/Include/cmsis_gcc.h ****   for (__zero_table_t const* pTable = &__zero_table_start__; pTable < &__zero_table_end__; ++pTable
 158:Drivers/CMSIS/Include/cmsis_gcc.h ****     for(uint32_t i=0u; i<pTable->wlen; ++i) {
 159:Drivers/CMSIS/Include/cmsis_gcc.h ****       pTable->dest[i] = 0u;
 160:Drivers/CMSIS/Include/cmsis_gcc.h ****     }
 161:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 162:Drivers/CMSIS/Include/cmsis_gcc.h ****  
 163:Drivers/CMSIS/Include/cmsis_gcc.h ****   _start();
 164:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 165:Drivers/CMSIS/Include/cmsis_gcc.h ****   
 166:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __PROGRAM_START           __cmsis_start
 167:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 168:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 169:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __INITIAL_SP
 170:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __INITIAL_SP              __StackTop
 171:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 172:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 173:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __STACK_LIMIT
 174:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __STACK_LIMIT             __StackLimit
 175:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 176:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 177:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __VECTOR_TABLE
 178:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __VECTOR_TABLE            __Vectors
 179:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 180:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 181:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __VECTOR_TABLE_ATTRIBUTE
 182:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __VECTOR_TABLE_ATTRIBUTE  __attribute((used, section(".vectors")))
 183:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 184:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 185:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ###########################  Core Function Access  ########################### */
 186:Drivers/CMSIS/Include/cmsis_gcc.h **** /** \ingroup  CMSIS_Core_FunctionInterface
 187:Drivers/CMSIS/Include/cmsis_gcc.h ****     \defgroup CMSIS_Core_RegAccFunctions CMSIS Core Register Access Functions
 188:Drivers/CMSIS/Include/cmsis_gcc.h ****   @{
 189:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 190:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 191:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 192:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Enable IRQ Interrupts
 193:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Enables IRQ interrupts by clearing the I-bit in the CPSR.
 194:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 195:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 196:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __enable_irq(void)
 197:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 198:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsie i" : : : "memory");
 199:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 200:Drivers/CMSIS/Include/cmsis_gcc.h **** 
ARM GAS  C:\Users\vmyhr\AppData\Local\Temp\ccR0Lff3.s 			page 19


 201:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 202:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 203:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Disable IRQ Interrupts
 204:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Disables IRQ interrupts by setting the I-bit in the CPSR.
 205:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 206:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 207:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __disable_irq(void)
 482              		.loc 2 207 27 view .LVU95
 483              	.LBB8:
 208:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 209:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsid i" : : : "memory");
 484              		.loc 2 209 3 view .LVU96
 485              		.syntax unified
 486              	@ 209 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 487 0000 72B6     		cpsid i
 488              	@ 0 "" 2
 489              		.thumb
 490              		.syntax unified
 491              	.L25:
 492              	.LBE8:
 493              	.LBE7:
 363:Core/Src/main.c ****   while (1)
 494              		.loc 1 363 3 view .LVU97
 364:Core/Src/main.c ****   {
 365:Core/Src/main.c ****   }
 495              		.loc 1 365 3 view .LVU98
 363:Core/Src/main.c ****   while (1)
 496              		.loc 1 363 9 view .LVU99
 497 0002 FEE7     		b	.L25
 498              		.cfi_endproc
 499              	.LFE148:
 501              		.section	.text.SystemClock_Config,"ax",%progbits
 502              		.align	1
 503              		.global	SystemClock_Config
 504              		.syntax unified
 505              		.thumb
 506              		.thumb_func
 508              	SystemClock_Config:
 509              	.LFB136:
 200:Core/Src/main.c ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 510              		.loc 1 200 1 view -0
 511              		.cfi_startproc
 512              		@ args = 0, pretend = 0, frame = 80
 513              		@ frame_needed = 0, uses_anonymous_args = 0
 514 0000 00B5     		push	{lr}
 515              		.cfi_def_cfa_offset 4
 516              		.cfi_offset 14, -4
 517 0002 95B0     		sub	sp, sp, #84
 518              		.cfi_def_cfa_offset 88
 201:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 519              		.loc 1 201 3 view .LVU101
 201:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 520              		.loc 1 201 22 is_stmt 0 view .LVU102
 521 0004 3822     		movs	r2, #56
 522 0006 0021     		movs	r1, #0
 523 0008 06A8     		add	r0, sp, #24
 524 000a FFF7FEFF 		bl	memset
ARM GAS  C:\Users\vmyhr\AppData\Local\Temp\ccR0Lff3.s 			page 20


 525              	.LVL38:
 202:Core/Src/main.c **** 
 526              		.loc 1 202 3 is_stmt 1 view .LVU103
 202:Core/Src/main.c **** 
 527              		.loc 1 202 22 is_stmt 0 view .LVU104
 528 000e 0020     		movs	r0, #0
 529 0010 0190     		str	r0, [sp, #4]
 530 0012 0290     		str	r0, [sp, #8]
 531 0014 0390     		str	r0, [sp, #12]
 532 0016 0490     		str	r0, [sp, #16]
 533 0018 0590     		str	r0, [sp, #20]
 206:Core/Src/main.c **** 
 534              		.loc 1 206 3 is_stmt 1 view .LVU105
 535 001a FFF7FEFF 		bl	HAL_PWREx_ControlVoltageScaling
 536              	.LVL39:
 211:Core/Src/main.c ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 537              		.loc 1 211 3 view .LVU106
 211:Core/Src/main.c ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 538              		.loc 1 211 36 is_stmt 0 view .LVU107
 539 001e 0223     		movs	r3, #2
 540 0020 0693     		str	r3, [sp, #24]
 212:Core/Src/main.c ****   RCC_OscInitStruct.HSICalibrationValue = RCC_HSICALIBRATION_DEFAULT;
 541              		.loc 1 212 3 is_stmt 1 view .LVU108
 212:Core/Src/main.c ****   RCC_OscInitStruct.HSICalibrationValue = RCC_HSICALIBRATION_DEFAULT;
 542              		.loc 1 212 30 is_stmt 0 view .LVU109
 543 0022 4FF48072 		mov	r2, #256
 544 0026 0992     		str	r2, [sp, #36]
 213:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 545              		.loc 1 213 3 is_stmt 1 view .LVU110
 213:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 546              		.loc 1 213 41 is_stmt 0 view .LVU111
 547 0028 4022     		movs	r2, #64
 548 002a 0A92     		str	r2, [sp, #40]
 214:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSI;
 549              		.loc 1 214 3 is_stmt 1 view .LVU112
 214:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSI;
 550              		.loc 1 214 34 is_stmt 0 view .LVU113
 551 002c 0D93     		str	r3, [sp, #52]
 215:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLM = RCC_PLLM_DIV4;
 552              		.loc 1 215 3 is_stmt 1 view .LVU114
 215:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLM = RCC_PLLM_DIV4;
 553              		.loc 1 215 35 is_stmt 0 view .LVU115
 554 002e 0E93     		str	r3, [sp, #56]
 216:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLN = 85;
 555              		.loc 1 216 3 is_stmt 1 view .LVU116
 216:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLN = 85;
 556              		.loc 1 216 30 is_stmt 0 view .LVU117
 557 0030 0422     		movs	r2, #4
 558 0032 0F92     		str	r2, [sp, #60]
 217:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV2;
 559              		.loc 1 217 3 is_stmt 1 view .LVU118
 217:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV2;
 560              		.loc 1 217 30 is_stmt 0 view .LVU119
 561 0034 5522     		movs	r2, #85
 562 0036 1092     		str	r2, [sp, #64]
 218:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLQ = RCC_PLLQ_DIV2;
 563              		.loc 1 218 3 is_stmt 1 view .LVU120
ARM GAS  C:\Users\vmyhr\AppData\Local\Temp\ccR0Lff3.s 			page 21


 218:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLQ = RCC_PLLQ_DIV2;
 564              		.loc 1 218 30 is_stmt 0 view .LVU121
 565 0038 1193     		str	r3, [sp, #68]
 219:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLR = RCC_PLLR_DIV2;
 566              		.loc 1 219 3 is_stmt 1 view .LVU122
 219:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLR = RCC_PLLR_DIV2;
 567              		.loc 1 219 30 is_stmt 0 view .LVU123
 568 003a 1293     		str	r3, [sp, #72]
 220:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 569              		.loc 1 220 3 is_stmt 1 view .LVU124
 220:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 570              		.loc 1 220 30 is_stmt 0 view .LVU125
 571 003c 1393     		str	r3, [sp, #76]
 221:Core/Src/main.c ****   {
 572              		.loc 1 221 3 is_stmt 1 view .LVU126
 221:Core/Src/main.c ****   {
 573              		.loc 1 221 7 is_stmt 0 view .LVU127
 574 003e 06A8     		add	r0, sp, #24
 575 0040 FFF7FEFF 		bl	HAL_RCC_OscConfig
 576              	.LVL40:
 221:Core/Src/main.c ****   {
 577              		.loc 1 221 6 discriminator 1 view .LVU128
 578 0044 80B9     		cbnz	r0, .L30
 228:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 579              		.loc 1 228 3 is_stmt 1 view .LVU129
 228:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 580              		.loc 1 228 31 is_stmt 0 view .LVU130
 581 0046 0F23     		movs	r3, #15
 582 0048 0193     		str	r3, [sp, #4]
 230:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 583              		.loc 1 230 3 is_stmt 1 view .LVU131
 230:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 584              		.loc 1 230 34 is_stmt 0 view .LVU132
 585 004a 0323     		movs	r3, #3
 586 004c 0293     		str	r3, [sp, #8]
 231:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV1;
 587              		.loc 1 231 3 is_stmt 1 view .LVU133
 231:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV1;
 588              		.loc 1 231 35 is_stmt 0 view .LVU134
 589 004e 0023     		movs	r3, #0
 590 0050 0393     		str	r3, [sp, #12]
 232:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 591              		.loc 1 232 3 is_stmt 1 view .LVU135
 232:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 592              		.loc 1 232 36 is_stmt 0 view .LVU136
 593 0052 0493     		str	r3, [sp, #16]
 233:Core/Src/main.c **** 
 594              		.loc 1 233 3 is_stmt 1 view .LVU137
 233:Core/Src/main.c **** 
 595              		.loc 1 233 36 is_stmt 0 view .LVU138
 596 0054 0593     		str	r3, [sp, #20]
 235:Core/Src/main.c ****   {
 597              		.loc 1 235 3 is_stmt 1 view .LVU139
 235:Core/Src/main.c ****   {
 598              		.loc 1 235 7 is_stmt 0 view .LVU140
 599 0056 0421     		movs	r1, #4
 600 0058 0DEB0100 		add	r0, sp, r1
ARM GAS  C:\Users\vmyhr\AppData\Local\Temp\ccR0Lff3.s 			page 22


 601 005c FFF7FEFF 		bl	HAL_RCC_ClockConfig
 602              	.LVL41:
 235:Core/Src/main.c ****   {
 603              		.loc 1 235 6 discriminator 1 view .LVU141
 604 0060 20B9     		cbnz	r0, .L31
 239:Core/Src/main.c **** 
 605              		.loc 1 239 1 view .LVU142
 606 0062 15B0     		add	sp, sp, #84
 607              		.cfi_remember_state
 608              		.cfi_def_cfa_offset 4
 609              		@ sp needed
 610 0064 5DF804FB 		ldr	pc, [sp], #4
 611              	.L30:
 612              		.cfi_restore_state
 223:Core/Src/main.c ****   }
 613              		.loc 1 223 5 is_stmt 1 view .LVU143
 614 0068 FFF7FEFF 		bl	Error_Handler
 615              	.LVL42:
 616              	.L31:
 237:Core/Src/main.c ****   }
 617              		.loc 1 237 5 view .LVU144
 618 006c FFF7FEFF 		bl	Error_Handler
 619              	.LVL43:
 620              		.cfi_endproc
 621              	.LFE136:
 623              		.section	.text.main,"ax",%progbits
 624              		.align	1
 625              		.global	main
 626              		.syntax unified
 627              		.thumb
 628              		.thumb_func
 630              	main:
 631              	.LFB135:
  78:Core/Src/main.c **** 
 632              		.loc 1 78 1 view -0
 633              		.cfi_startproc
 634              		@ args = 0, pretend = 0, frame = 0
 635              		@ frame_needed = 0, uses_anonymous_args = 0
 636 0000 08B5     		push	{r3, lr}
 637              		.cfi_def_cfa_offset 8
 638              		.cfi_offset 3, -8
 639              		.cfi_offset 14, -4
  87:Core/Src/main.c **** 
 640              		.loc 1 87 3 view .LVU146
 641 0002 FFF7FEFF 		bl	HAL_Init
 642              	.LVL44:
  94:Core/Src/main.c **** 
 643              		.loc 1 94 3 view .LVU147
 644 0006 FFF7FEFF 		bl	SystemClock_Config
 645              	.LVL45:
 101:Core/Src/main.c ****   MX_I2C1_Init();
 646              		.loc 1 101 3 view .LVU148
 647 000a FFF7FEFF 		bl	MX_GPIO_Init
 648              	.LVL46:
 102:Core/Src/main.c ****   MX_SPI3_Init();
 649              		.loc 1 102 3 view .LVU149
 650 000e FFF7FEFF 		bl	MX_I2C1_Init
ARM GAS  C:\Users\vmyhr\AppData\Local\Temp\ccR0Lff3.s 			page 23


 651              	.LVL47:
 103:Core/Src/main.c ****   /* USER CODE BEGIN 2 */
 652              		.loc 1 103 3 view .LVU150
 653 0012 FFF7FEFF 		bl	MX_SPI3_Init
 654              	.LVL48:
 105:Core/Src/main.c ****   int measurementIndex = 0; // Index for the next measurement to be stored
 655              		.loc 1 105 3 view .LVU151
 106:Core/Src/main.c ****   uint32_t lastMeasurementTime = 0; // Timestamp of the last measurement
 656              		.loc 1 106 3 view .LVU152
 107:Core/Src/main.c ****   //HAL_GPIO_WritePin(GPIOA,GPIO_PIN_8,GPIO_PIN_SET);
 657              		.loc 1 107 3 view .LVU153
 658              	.L33:
 143:Core/Src/main.c ****   {
 659              		.loc 1 143 3 view .LVU154
 145:Core/Src/main.c ****     gps_data[1] = 0xd1;
 660              		.loc 1 145 5 view .LVU155
 145:Core/Src/main.c ****     gps_data[1] = 0xd1;
 661              		.loc 1 145 17 is_stmt 0 view .LVU156
 662 0016 094B     		ldr	r3, .L35
 663 0018 B022     		movs	r2, #176
 664 001a 1A70     		strb	r2, [r3]
 146:Core/Src/main.c ****     gps_data[2] = 0xd1;
 665              		.loc 1 146 5 is_stmt 1 view .LVU157
 146:Core/Src/main.c ****     gps_data[2] = 0xd1;
 666              		.loc 1 146 17 is_stmt 0 view .LVU158
 667 001c D122     		movs	r2, #209
 668 001e 5A70     		strb	r2, [r3, #1]
 147:Core/Src/main.c ****     gps_data[3] = 0xd1;
 669              		.loc 1 147 5 is_stmt 1 view .LVU159
 147:Core/Src/main.c ****     gps_data[3] = 0xd1;
 670              		.loc 1 147 17 is_stmt 0 view .LVU160
 671 0020 9A70     		strb	r2, [r3, #2]
 148:Core/Src/main.c ****     gps_data[4] = 0xd2;
 672              		.loc 1 148 5 is_stmt 1 view .LVU161
 148:Core/Src/main.c ****     gps_data[4] = 0xd2;
 673              		.loc 1 148 17 is_stmt 0 view .LVU162
 674 0022 DA70     		strb	r2, [r3, #3]
 149:Core/Src/main.c ****     gps_data[5] = 0xd2;
 675              		.loc 1 149 5 is_stmt 1 view .LVU163
 149:Core/Src/main.c ****     gps_data[5] = 0xd2;
 676              		.loc 1 149 17 is_stmt 0 view .LVU164
 677 0024 D222     		movs	r2, #210
 678 0026 1A71     		strb	r2, [r3, #4]
 150:Core/Src/main.c ****     gps_data[6] = 0xd2;
 679              		.loc 1 150 5 is_stmt 1 view .LVU165
 150:Core/Src/main.c ****     gps_data[6] = 0xd2;
 680              		.loc 1 150 17 is_stmt 0 view .LVU166
 681 0028 5A71     		strb	r2, [r3, #5]
 151:Core/Src/main.c ****     gps_data[7] = 0xd2;
 682              		.loc 1 151 5 is_stmt 1 view .LVU167
 151:Core/Src/main.c ****     gps_data[7] = 0xd2;
 683              		.loc 1 151 17 is_stmt 0 view .LVU168
 684 002a 9A71     		strb	r2, [r3, #6]
 152:Core/Src/main.c ****     gps_data[8] = 0xd3;
 685              		.loc 1 152 5 is_stmt 1 view .LVU169
 152:Core/Src/main.c ****     gps_data[8] = 0xd3;
 686              		.loc 1 152 17 is_stmt 0 view .LVU170
ARM GAS  C:\Users\vmyhr\AppData\Local\Temp\ccR0Lff3.s 			page 24


 687 002c DA71     		strb	r2, [r3, #7]
 153:Core/Src/main.c ****     gps_data[9] = 0xd3;
 688              		.loc 1 153 5 is_stmt 1 view .LVU171
 153:Core/Src/main.c ****     gps_data[9] = 0xd3;
 689              		.loc 1 153 17 is_stmt 0 view .LVU172
 690 002e D322     		movs	r2, #211
 691 0030 1A72     		strb	r2, [r3, #8]
 154:Core/Src/main.c ****     gps_data[10] = 0xd3;
 692              		.loc 1 154 5 is_stmt 1 view .LVU173
 154:Core/Src/main.c ****     gps_data[10] = 0xd3;
 693              		.loc 1 154 17 is_stmt 0 view .LVU174
 694 0032 5A72     		strb	r2, [r3, #9]
 155:Core/Src/main.c ****     gps_data[11] = 0xd3;
 695              		.loc 1 155 5 is_stmt 1 view .LVU175
 155:Core/Src/main.c ****     gps_data[11] = 0xd3;
 696              		.loc 1 155 18 is_stmt 0 view .LVU176
 697 0034 9A72     		strb	r2, [r3, #10]
 156:Core/Src/main.c **** 
 698              		.loc 1 156 5 is_stmt 1 discriminator 1 view .LVU177
 156:Core/Src/main.c **** 
 699              		.loc 1 156 18 is_stmt 0 discriminator 1 view .LVU178
 700 0036 DA72     		strb	r2, [r3, #11]
 143:Core/Src/main.c ****   {
 701              		.loc 1 143 9 is_stmt 1 view .LVU179
 702 0038 EDE7     		b	.L33
 703              	.L36:
 704 003a 00BF     		.align	2
 705              	.L35:
 706 003c 00000000 		.word	gps_data
 707              		.cfi_endproc
 708              	.LFE135:
 710              		.global	gps_data
 711              		.section	.data.gps_data,"aw"
 712              		.align	2
 715              	gps_data:
 716 0000 B0D1D1D1 		.ascii	"\260\321\321\321\322\322\322\322\323\323\323\323"
 716      D2D2D2D2 
 716      D3D3D3D3 
 717              		.global	rx_data
 718              		.section	.bss.rx_data,"aw",%nobits
 719              		.align	2
 722              	rx_data:
 723 0000 00000000 		.space	12
 723      00000000 
 723      00000000 
 724              		.global	tellerflagg
 725              		.section	.bss.tellerflagg,"aw",%nobits
 728              	tellerflagg:
 729 0000 00       		.space	1
 730              		.global	MS5803_coefficient
 731              		.section	.bss.MS5803_coefficient,"aw",%nobits
 732              		.align	2
 735              	MS5803_coefficient:
 736 0000 00000000 		.space	12
 736      00000000 
 736      00000000 
 737              		.text
ARM GAS  C:\Users\vmyhr\AppData\Local\Temp\ccR0Lff3.s 			page 25


 738              	.Letext0:
 739              		.file 3 "C:/Users/vmyhr/AppData/Roaming/Code/User/globalStorage/bmd.stm32-for-vscode/@xpack-dev-to
 740              		.file 4 "C:/Users/vmyhr/AppData/Roaming/Code/User/globalStorage/bmd.stm32-for-vscode/@xpack-dev-to
 741              		.file 5 "Drivers/CMSIS/Device/ST/STM32G4xx/Include/stm32g431xx.h"
 742              		.file 6 "C:/Users/vmyhr/AppData/Roaming/Code/User/globalStorage/bmd.stm32-for-vscode/@xpack-dev-to
 743              		.file 7 "Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_hal_def.h"
 744              		.file 8 "Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_hal_rcc.h"
 745              		.file 9 "Core/Inc/ms5803.h"
 746              		.file 10 "Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_hal_pwr_ex.h"
 747              		.file 11 "Core/Inc/spi.h"
 748              		.file 12 "Core/Inc/i2c.h"
 749              		.file 13 "Core/Inc/gpio.h"
 750              		.file 14 "Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_hal.h"
 751              		.file 15 "<built-in>"
ARM GAS  C:\Users\vmyhr\AppData\Local\Temp\ccR0Lff3.s 			page 26


DEFINED SYMBOLS
                            *ABS*:00000000 main.c
C:\Users\vmyhr\AppData\Local\Temp\ccR0Lff3.s:21     .text.SPI_WAIT_NOT_BUSY:00000000 $t
C:\Users\vmyhr\AppData\Local\Temp\ccR0Lff3.s:27     .text.SPI_WAIT_NOT_BUSY:00000000 SPI_WAIT_NOT_BUSY
C:\Users\vmyhr\AppData\Local\Temp\ccR0Lff3.s:48     .text.SPI_WAIT_TXE:00000000 $t
C:\Users\vmyhr\AppData\Local\Temp\ccR0Lff3.s:54     .text.SPI_WAIT_TXE:00000000 SPI_WAIT_TXE
C:\Users\vmyhr\AppData\Local\Temp\ccR0Lff3.s:75     .text.SPI_READ_DR:00000000 $t
C:\Users\vmyhr\AppData\Local\Temp\ccR0Lff3.s:81     .text.SPI_READ_DR:00000000 SPI_READ_DR
C:\Users\vmyhr\AppData\Local\Temp\ccR0Lff3.s:100    .text.SPI_CLEAR_DR:00000000 $t
C:\Users\vmyhr\AppData\Local\Temp\ccR0Lff3.s:106    .text.SPI_CLEAR_DR:00000000 SPI_CLEAR_DR
C:\Users\vmyhr\AppData\Local\Temp\ccR0Lff3.s:122    .text.SPI_WAIT_RXNE:00000000 $t
C:\Users\vmyhr\AppData\Local\Temp\ccR0Lff3.s:128    .text.SPI_WAIT_RXNE:00000000 SPI_WAIT_RXNE
C:\Users\vmyhr\AppData\Local\Temp\ccR0Lff3.s:149    .text.SPI_WRITE_DR:00000000 $t
C:\Users\vmyhr\AppData\Local\Temp\ccR0Lff3.s:155    .text.SPI_WRITE_DR:00000000 SPI_WRITE_DR
C:\Users\vmyhr\AppData\Local\Temp\ccR0Lff3.s:172    .text.enable_spi:00000000 $t
C:\Users\vmyhr\AppData\Local\Temp\ccR0Lff3.s:178    .text.enable_spi:00000000 enable_spi
C:\Users\vmyhr\AppData\Local\Temp\ccR0Lff3.s:198    .text.disable_spi:00000000 $t
C:\Users\vmyhr\AppData\Local\Temp\ccR0Lff3.s:204    .text.disable_spi:00000000 disable_spi
C:\Users\vmyhr\AppData\Local\Temp\ccR0Lff3.s:224    .text.SPI_Transmit:00000000 $t
C:\Users\vmyhr\AppData\Local\Temp\ccR0Lff3.s:230    .text.SPI_Transmit:00000000 SPI_Transmit
C:\Users\vmyhr\AppData\Local\Temp\ccR0Lff3.s:303    .text.SPI_Receive:00000000 $t
C:\Users\vmyhr\AppData\Local\Temp\ccR0Lff3.s:309    .text.SPI_Receive:00000000 SPI_Receive
C:\Users\vmyhr\AppData\Local\Temp\ccR0Lff3.s:381    .text.SPI_TransmitReceive:00000000 $t
C:\Users\vmyhr\AppData\Local\Temp\ccR0Lff3.s:387    .text.SPI_TransmitReceive:00000000 SPI_TransmitReceive
C:\Users\vmyhr\AppData\Local\Temp\ccR0Lff3.s:464    .text.Error_Handler:00000000 $t
C:\Users\vmyhr\AppData\Local\Temp\ccR0Lff3.s:470    .text.Error_Handler:00000000 Error_Handler
C:\Users\vmyhr\AppData\Local\Temp\ccR0Lff3.s:502    .text.SystemClock_Config:00000000 $t
C:\Users\vmyhr\AppData\Local\Temp\ccR0Lff3.s:508    .text.SystemClock_Config:00000000 SystemClock_Config
C:\Users\vmyhr\AppData\Local\Temp\ccR0Lff3.s:624    .text.main:00000000 $t
C:\Users\vmyhr\AppData\Local\Temp\ccR0Lff3.s:630    .text.main:00000000 main
C:\Users\vmyhr\AppData\Local\Temp\ccR0Lff3.s:706    .text.main:0000003c $d
C:\Users\vmyhr\AppData\Local\Temp\ccR0Lff3.s:715    .data.gps_data:00000000 gps_data
C:\Users\vmyhr\AppData\Local\Temp\ccR0Lff3.s:712    .data.gps_data:00000000 $d
C:\Users\vmyhr\AppData\Local\Temp\ccR0Lff3.s:722    .bss.rx_data:00000000 rx_data
C:\Users\vmyhr\AppData\Local\Temp\ccR0Lff3.s:719    .bss.rx_data:00000000 $d
C:\Users\vmyhr\AppData\Local\Temp\ccR0Lff3.s:728    .bss.tellerflagg:00000000 tellerflagg
C:\Users\vmyhr\AppData\Local\Temp\ccR0Lff3.s:729    .bss.tellerflagg:00000000 $d
C:\Users\vmyhr\AppData\Local\Temp\ccR0Lff3.s:735    .bss.MS5803_coefficient:00000000 MS5803_coefficient
C:\Users\vmyhr\AppData\Local\Temp\ccR0Lff3.s:732    .bss.MS5803_coefficient:00000000 $d

UNDEFINED SYMBOLS
memset
HAL_PWREx_ControlVoltageScaling
HAL_RCC_OscConfig
HAL_RCC_ClockConfig
HAL_Init
MX_GPIO_Init
MX_I2C1_Init
MX_SPI3_Init
